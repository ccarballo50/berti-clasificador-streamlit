import streamlit as st
import pandas as pd
import os
import base64
from enriquecedor_clinico import enriquecer_anamnesis, score_tipicidad, clasificacion_angina


st.set_page_config(page_title="BERTI - Clasificador SEC", layout="wide")
st.title("ü©∫ Clasificador Cl√≠nico BERTI - Angina T√≠pica / At√≠pica")

# Inicializar lista acumulativa en sesi√≥n si no existe
if "casos_analizados" not in st.session_state:
    st.session_state.casos_analizados = []

texto_input = st.text_area("‚úç Introduce aqu√≠ la anamnesis cl√≠nica del paciente:", height=200)

if st.button("üîç Analizar anamnesis"):
    if texto_input.strip() != "":
        enriquecido, resumen = enriquecer_anamnesis(texto_input)
        score = score_tipicidad(resumen)
        clasificacion = clasificacion_angina(score)

        st.markdown("### ‚úÖ Resultado del an√°lisis cl√≠nico")
        st.markdown("**Texto enriquecido:**")
        st.code(enriquecido, language="markdown")

        st.markdown("**Score de tipicidad cl√≠nica:**")
        st.write(score)

        st.markdown("**Clasificaci√≥n SEC:**")
        st.write(clasificacion)

        st.markdown("### üß† Variables cl√≠nicas detectadas")
        for var, val in resumen.items():
            st.markdown(f"- **{var}**: `{val}`")

        # BLOQUE: Preguntas asistidas por BERTI si hay datos ausentes relevantes
        preguntas_clave = {
            "tipo_dolor": "¬øC√≥mo describir√≠a el tipo de dolor? ¬øOpresivo, quemante, punzante‚Ä¶?",
            "localizacion_dolor": "¬øD√≥nde se localiza el dolor? ¬øPrecordial, retroesternal, tor√°cico‚Ä¶?",
            "inicio_dolor": "¬øFue un inicio s√∫bito o gradual?",
            "irradiacion": "¬øIrradia el dolor a brazo, cuello o mand√≠bula?",
            "alivio_con_reposo": "¬øEl dolor mejora con el reposo?",
            "similitud_dolor_previo_isquemico": "¬øSe parece a alg√∫n dolor previo como un IAM o problema card√≠aco anterior?",
            "duracion": "¬øCu√°l fue la duraci√≥n del episodio (minutos, horas, segundos)?",
            "disnea": "¬øPresentaba disnea o dificultad respiratoria?",
            "sudoracion": "¬øHubo sudoraci√≥n acompa√±ante?",
            "vomitos": "¬øAparecieron n√°useas o v√≥mitos?",
            "palpitaciones": "¬øSe acompa√±aba de palpitaciones?"
        }

        respuestas_usuario = {}
        faltan_datos = [var for var, valor in resumen.items() if valor == "no mencionado" and var in preguntas_clave]

        if faltan_datos:
            st.markdown("### ‚ùì Preguntas asistidas por BERTI para completar diagn√≥stico")
            st.info("Para emitir un diagn√≥stico m√°s preciso, BERTI sugiere preguntar al m√©dico cl√≠nico. Por favor, responde SI / NO / NO LO SABE")

            for var in faltan_datos:
                respuesta = st.selectbox(f"‚û°Ô∏è {preguntas_clave[var]}", ["NO RESPONDE", "SI", "NO", "NO LO SABE"], key=var)
                respuestas_usuario[var] = respuesta

        # Guardar caso en sesi√≥n con respuestas
        st.session_state.casos_analizados.append({
            "anamnesis": texto_input,
            "texto_enriquecido": enriquecido,
            "clasificacion_sec": clasificacion,
            "respuestas_berti": respuestas_usuario
        })
        st.success("‚úÖ Caso guardado correctamente en la sesi√≥n.")

# Mostrar los casos acumulados
if len(st.session_state.casos_analizados) > 0:
    st.markdown("### üìä Casos acumulados en esta sesi√≥n")
    df_casos = pd.DataFrame(st.session_state.casos_analizados)
    st.dataframe(df_casos)

    if st.button("‚¨áÔ∏è Exportar todos los casos a Excel"):
        df_casos.to_excel("casos_enriquecidos_BERTI.xlsx", index=False)
        st.success("‚úÖ Archivo 'casos_enriquecidos_BERTI.xlsx' generado. Puedes descargarlo desde el entorno de ejecuci√≥n.")
else:
    st.markdown("### üìä Casos acumulados en esta sesi√≥n")
    st.info("A√∫n no hay casos acumulados. Analiza primero una anamnesis.")


    # Bot√≥n para exportar
if st.button("‚¨áÔ∏è Exportar todos los casos a Excel"):
    df_casos.to_excel("casos_enriquecidos_BERTI.xlsx", index=False)
    st.success("‚úÖ Archivo 'casos_enriquecidos_BERTI.xlsx' generado. Puedes descargarlo desde el entorno de ejecuci√≥n.")
else:
    st.markdown("### üìä Casos acumulados en esta sesi√≥n")
    st.info("A√∫n no hay casos acumulados. Analiza primero una anamnesis.")
